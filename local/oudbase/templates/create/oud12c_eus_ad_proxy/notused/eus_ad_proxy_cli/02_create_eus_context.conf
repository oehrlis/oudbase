# -----------------------------------------------------------------------
# Trivadis AG, Business Development & Support (BDS)
# Saegereistrasse 29, 8152 Glattbrugg, Switzerland
# -----------------------------------------------------------------------
# Name.......: 02_create_eus_context.conf
# Author.....: Stefan Oehrli (oes) stefan.oehrli@trivadis.com
# Editor.....: Stefan Oehrli
# Date.......: 2018.06.26
# Revision...: --
# Purpose....: dsconfig Batch file to add an EUS context to the OUD proxy instance
# Notes......: The following configuration will be added using dsconfig batch mode. 
#              If required, these can also be executed individually.
#
#              dsconfig -h ${HOSTNAME} -p $PORT_ADMIN \
#                  -D "cn=Directory Manager"-j $PWD_FILE -X -n \
#                  set-global-configuration-prop \
#                  --set single-structural-objectclass-behavior:accept
#
# Reference..: https://github.com/oehrlis/oudbase
#              MOS note 1592421.1 OUD-EUS Setup Steps Using the Command Line Interface
#              https://support.oracle.com/epmos/faces/DocumentDisplay?id=1592421.1
# License....: GPL-3.0+
# -----------------------------------------------------------------------
# Modified...:
# see git revision history with git log for more information on changes
# -----------------------------------------------------------------------

# -----------------------------------------------------------------------
# The database checks that OUD contains the proper schema by sending 
# searches on cn=subschemasubentry, while OUD provides its schema through 
# cn=schema. The following steps configure DN renaming through 
# cn=subschemasubentry based on the content of cn=schema
#
# Create workflow element subschemasubentry
create-workflow-element \
  --set client-base-dn:cn=subschemasubentry \
  --set enabled:true \
  --set next-workflow-element:schema \
  --set source-base-dn:cn=schema \
  --type dn-renaming \
  --element-name subschemasubentry

# Create workflow subschemasubentry
create-workflow \
  --set base-dn:cn=subschemasubentry \
  --set enabled:true \
  --set workflow-element:subschemasubentry \
  --type generic \
  --workflow-name subschemasubentry

# update network-group
set-network-group-prop \
  --group-name network-group \
  --add workflow:subschemasubentry

# -----------------------------------------------------------------------
# The database checks that the LDAP server is compliant by reading the 
# content of cn=OracleContext and cn=OracleSchemaVersion. The following 
# steps create a local database storing this information, and imports the 
# required data into it.

# Create workflow element OIDCompatibility
create-workflow-element \
  --set base-dn:cn=OracleContext \
  --set base-dn:cn=OracleSchemaVersion \
  --set enabled:true \
  --type db-local-backend \
  --element-name OIDCompatibility

# Create workflow element EUS Alias OracleContext
create-workflow-element \
  --set enabled:true \
  --set next-workflow-element:OIDCompatibility \
  --type eus-alias-resolution \
  --element-name EusAliasOracleContext

# Create workflow OracleSchemaVersion
create-workflow \
  --set base-dn:cn=OracleSchemaVersion \
  --set enabled:true \
  --set workflow-element:OIDCompatibility \
  --type generic \
  --workflow-name OracleSchemaVersion

# Create workflow OracleContext
create-workflow \
  --set base-dn:cn=OracleContext \
  --set enabled:true \
  --set workflow-element:EusAliasOracleContext \
  --type generic \
  --workflow-name OracleContext

# update network-group
set-network-group-prop \
  --group-name network-group \
  --add workflow:OracleContext \
  --add workflow:OracleSchemaVersion

# -----------------------------------------------------------------------
# EUS reads and writes its configuration in cn=OracleContext,dc=example,dc=com. 
# This means that OUD must provide this baseDN.

# Create workflow element OracleContext1
create-workflow-element \
  --set base-dn:cn=OracleContext,dc=example,dc=com \
  --set enabled:true \
  --type db-local-backend \
  --element-name OracleContext1

# Create workflow element EUS Alias OracleContext
create-workflow-element \
  --set enabled:true \
  --set next-workflow-element:OracleContext1 \
  --type eus-alias-resolution \
  --element-name EusAliasOracleContext1

# Create workflow element EUS OracleContext1
create-workflow-element \
  --set enabled:true \
  --set next-workflow-element:EusAliasOracleContext1 \
  --type eus-context \
  --element-name EusOracleContext1

# Create workflow OracleContext1
create-workflow \
  --set base-dn:cn=OracleContext,dc=example,dc=com \
  --set enabled:true \
  --set workflow-element:EusOracleContext1 \
  --type generic \
  --workflow-name OracleContext1

# update network-group
set-network-group-prop \
  --group-name network-group \
  --add workflow:OracleContext1

# -----------------------------------------------------------------------
# EUS AD Proxy reads its information for the AD this requires a 
# corresponding workflo.

# Create AD LDAP extention
create-extension \
  --set enabled:true \
  --set remote-ldap-server-address:AD_PDC_HOST \
  --set remote-ldap-server-port:AD_PDC_PORT \
  --type ldap-server \
  --extension-name proxy1

# Create AD proxy element
create-workflow-element \
  --set enabled:true \
  --set client-cred-mode:use-client-identity \
  --set ldap-server-extension:proxy1 \
  --type proxy-ldap \
  --element-name proxy-we1

# Configure AD proxy element
set-workflow-element-prop \
  --element-name proxy-we1 \
  --add exclude-list:cn=directory\ manager \
  --add exclude-list:cn=oraclecontext,dc=example,dc=com \
  --set remote-ldap-server-bind-dn:AD_PDC_USER \
  --set remote-ldap-server-bind-password:AD_PDC_PASSWORD

# Create EUS realm for AD
create-workflow-element \
  --set enabled:true \
  --set eus-realm:dc=example,dc=com \
  --set next-workflow-element:proxy-we1 \
  --set server-type:ad \
  --type eus \
  --element-name eus-we1 \

# create transformation for saMAccountName
create-transformation \
  --type map-attribute \
  --transformation-name uidTransfo \
  --set client-attribute:uid=%saMAccountName%

# create transformation for Kerberos stuff
create-transformation \
  --type map-attribute \
  --transformation-name krbprincipalnameTransfo \
  --set client-attribute:krbPrincipalName=%userPrincipalName%

# create transformation workflow element
create-workflow-element \
  --set enabled:true \
  --set next-workflow-element:eus-we1 \
  --set transformation:krbprincipalnameTransfo \
  --set transformation:uidTransfo \
  --type transformations \
  --element-name eus-transfo-we1

# Create transformation workflow 
create-workflow \
  --set base-dn:dc=example,dc=com \
  --set enabled:true \
  --set workflow-element:eus-transfo-we1 \
  --type generic \
  --workflow-name workflow1

# update network-group
set-network-group-prop \
  --group-name network-group \
  --add workflow:workflow1

# Create QOS for network-group
create-network-group-qos-policy \
  --group-name network-group \
  --set referral-policy:discard \
  --type referral

set-access-control-handler-prop \
   --add global-aci:\(target=\"ldap:///cn=subschemasubentry\"\)\(targetscope=\"base\"\)\(targetattr=\"objectClass\|\|attributeTypes\|\|dITContentRules\|\|dITStructureRules\|\|ldapSyntaxes\|\|matchingRules\|\|matchingRuleUse\|\|nameForms\|\|objectClasses\"\)\(version\ 3.0\;\ acl\ \"User-Visible\ SubSchemaSubentry\ Operational\ Attributes\"\;\ allow\ \(read,search,compare\)\ userdn=\"ldap:///anyone\"\;\) \
  --add global-aci:\(targetcontrol=\"2.16.840.1.113894.1.8.16\"\)\(version\ 3.0\;\ acl\ \"Anonymous\ control\ access\"\;\ allow\(read\)\ userdn=\"ldap:///anyone\"\;\) \
  --add global-aci:\(targetcontrol=\"2.16.840.1.113894.1.8.2\"\)\(version\ 3.0\;\ acl\ \"Anonymous\ control\ access\"\;\ allow\(read\)\ userdn=\"ldap:///anyone\"\;\) \
  --add global-aci:\(target=\"ldap:///cn=oraclecontext,dc=example,dc=com\"\)\(targetattr!=\"userpassword\|\|authpassword\|\|aci\"\)\(version\ 3.0\;\ acl\ \"Anonymous\ read\ access\ to\ subtree\"\;allow\ \(read,search,compare\)\ userdn=\"ldap:///anyone\"\;\) \
  --add global-aci:\(target=\"ldap:///dc=example,dc=com\"\)\(targetattr=\"orclaccountstatusevent\"\)\(version\ 3.0\;\ acl\ \"EUS\ write\ orclaccountstatusenabled\"\;\ allow\ \(write\)\ userdn=\"ldap:///??sub?\(\&\(objectclass=orclservice\)\(objectclass=orcldbserver\)\)\"\;\) \
  --add global-aci:\(target=\"ldap:///dc=example,dc=com\"\)\(targetattr=\"authpassword\|\|userpassword\"\)\(version\ 3.0\;\ acl\ \"EUS\ reads\ authpassword\"\;\ allow\ \(read,search,compare\)\ userdn=\"ldap:///??sub?\(\&\(objectclass=orclservice\)\(objectclass=orcldbserver\)\)\"\;\)

# update identity Mapper see MOS Note 2001851.1
set-identity-mapper-prop \
  --mapper-name "Exact Match" \
  --set match-base-dn:cn=config

# adjust root passwort policy add AES see MOS Note 2001851.1
set-password-policy-prop \
  --policy-name Root\ Password\ Policy \
  --add default-password-storage-scheme:AES \
  --set allow-multiple-password-values:true

# - EOF -----------------------------------------------------------------